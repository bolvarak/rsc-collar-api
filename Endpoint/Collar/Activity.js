///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $lodash = require('lodash'); /// The Lodash Utility Module /////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $config = require('../../Common/Configuration'); /// Configuration Module //////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const ModelCollarActivity = require('../../Model/Collar/Activity'); /// Activity Entry Model /////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
module.exports = ($httpRequest, $httpResponse, $nextCall) => { /// Authentication Module Definition //////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	// Make sure we have an end time
	$httpRequest.expect('endTime');
	// Make sure we have a heart rate
	$httpRequest.expect('heartRate');
	// Make sure we have a speed
	$httpRequest.expect('rateOfMovement');
	// Make sure we have a start time
	$httpRequest.expect('startTime');
	// Make sure the end time is numeric
	if (!$lodash.isNumber($httpRequest.value('endTime'))) {
		// We're done, send the error
		return $httpRequest.raise('Invalid Type for endTime', 400);
	}
	// Make sure the  heart rate is numeric
	if (!$lodash.isNumber($httpRequest.value('heartRate'))) {
		// We're done, send the error
		return $httpRequest.raise('Invalid Type for heartRate', 400);
	}
	// Make sure the speed is numeric
	if (!$lodash.isNumber($httpRequest.value('rateOfMovement'))) {
		// We're done, send the error
		return $httpRequest.raise('Invalid Type for rateOfMovement', 400);
	}
	// Make sure the start time is numeric
	if (!$lodash.isNumber($httpRequest.value('startTime'))) {
		// We're done, send the error
		return $httpRequest.raise('Invalid Type for startTime', 400);
	}
	// Instantiate the activity entry
	let $activity = ModelCollarActivity.fromRequest($httpRequest);
	// Save the model to DynamoDB
	$activity.save().then(($data) => {
		// We're done, send the response
		$httpResponse.respond();
	}).catch(($error) => {
		// We're done, send the error
		$httpRequest.raiseError($error, 500);
	});

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}; /// End Authentication Module Definition //////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

